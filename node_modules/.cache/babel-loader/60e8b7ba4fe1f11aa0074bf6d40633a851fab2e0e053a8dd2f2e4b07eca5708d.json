{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\CreateAccount.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost({\n  isValidAccount,\n  setAccount\n}) {\n  _s();\n  const navigate = useNavigate();\n  const initialValues = {\n    account_type: \"\",\n    account_name: \"\",\n    account_description: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    account_type: Yup.string().required(\"You must input an account_type!\"),\n    account_name: Yup.string().required(\"You must input an account_name!\"),\n    account_description: Yup.string().min(3).max(1000).required(\"Description is required.\")\n  });\n  const onSubmit = (data, {\n    setSubmitting\n  }) => {\n    /*  axios.get('http://localhost:3001/accounts', {\r\n        \r\n      })\r\n        .then(response => {\r\n          if (response.data.error) {\r\n            alert(response.data.error);\r\n          } else {\r\n            setAccount(response.data);\r\n            console.log(response.data);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data:', error);\r\n        });\r\n    */\n    axios.post(\"http://localhost:3001/accounts\", data).then(response => {\n      console.log(\"Request successful:\", response.data);\n      setAccount = response.data.account_id;\n      // Navigate to '/CreateUsers' after successful submission\n      navigate('/CreateUsers');\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    }).finally(() => {\n      // Ensure to reset the form submission state\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account_type\",\n            children: \"Account Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"account_type\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"account_type\",\n            name: \"account_type\",\n            placeholder: \"(Ex. account_type...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account_name\",\n            children: \"Account Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"account_name\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"account_name\",\n            name: \"account_name\",\n            placeholder: \"(Ex. account_name...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"account_description\",\n            children: \"Account Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"account_description\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"account_description\",\n            name: \"account_description\",\n            placeholder: \"(Ex. John123...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","jsxDEV","_jsxDEV","CreatePost","isValidAccount","setAccount","_s","navigate","initialValues","account_type","account_name","account_description","validationSchema","object","shape","string","required","min","max","onSubmit","data","setSubmitting","post","then","response","console","log","account_id","catch","error","finally","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","component","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/CreateAccount.js"],"sourcesContent":["\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CreatePost( {isValidAccount,setAccount}) {\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  const initialValues = {\r\n    account_type: \"\",\r\n    account_name: \"\",\r\n    account_description: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    account_type: Yup.string().required(\"You must input an account_type!\"),\r\n    account_name: Yup.string().required(\"You must input an account_name!\"),\r\n    account_description: Yup.string().min(3).max(1000).required(\"Description is required.\"),\r\n  });\r\n\r\n  const onSubmit = (data, { setSubmitting }) => {\r\n  /*  axios.get('http://localhost:3001/accounts', {\r\n      \r\n    })\r\n      .then(response => {\r\n        if (response.data.error) {\r\n          alert(response.data.error);\r\n        } else {\r\n          setAccount(response.data);\r\n          console.log(response.data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  */\r\n    axios.post(\"http://localhost:3001/accounts\", data)\r\n      .then((response) => {\r\n        console.log(\"Request successful:\", response.data);\r\n        setAccount = response.data.account_id;\r\n        // Navigate to '/CreateUsers' after successful submission\r\n        navigate('/CreateUsers');\r\n       \r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      })\r\n      .finally(() => {\r\n        // Ensure to reset the form submission state\r\n        setSubmitting(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"account_type\">Account Type:</label>\r\n            <ErrorMessage name=\"account_type\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"account_type\"\r\n              name=\"account_type\"\r\n              placeholder=\"(Ex. account_type...)\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"account_name\">Account Name:</label>\r\n            <ErrorMessage name=\"account_name\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"account_name\"\r\n              name=\"account_name\"\r\n              placeholder=\"(Ex. account_name...)\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"account_description\">Account Description:</label>\r\n            <ErrorMessage name=\"account_description\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"account_description\"\r\n              name=\"account_description\"\r\n              placeholder=\"(Ex. John123...)\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n          type=\"submit\"\r\n          >Create Post\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}