{"ast":null,"code":"/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIndexOf = require('lodash._baseindexof'),\n  cacheIndexOf = require('lodash._cacheindexof'),\n  createCache = require('lodash._createcache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.difference` which accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var length = array ? array.length : 0,\n    result = [];\n  if (!length) {\n    return result;\n  }\n  var index = -1,\n    indexOf = baseIndexOf,\n    isCommon = true,\n    cache = isCommon && values.length >= LARGE_ARRAY_SIZE ? createCache(values) : null,\n    valuesLength = values.length;\n  if (cache) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n    values = cache;\n  }\n  outer: while (++index < length) {\n    var value = array[index];\n    if (isCommon && value === value) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === value) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    } else if (indexOf(values, value, 0) < 0) {\n      result.push(value);\n    }\n  }\n  return result;\n}\nmodule.exports = baseDifference;","map":{"version":3,"names":["baseIndexOf","require","cacheIndexOf","createCache","LARGE_ARRAY_SIZE","baseDifference","array","values","length","result","index","indexOf","isCommon","cache","valuesLength","outer","value","valuesIndex","push","module","exports"],"sources":["C:/programming/github/Clash/Frontend/node_modules/lodash._basedifference/index.js"],"sourcesContent":["/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\nvar baseIndexOf = require('lodash._baseindexof'),\n    cacheIndexOf = require('lodash._cacheindexof'),\n    createCache = require('lodash._createcache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.difference` which accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var length = array ? array.length : 0,\n      result = [];\n\n  if (!length) {\n    return result;\n  }\n  var index = -1,\n      indexOf = baseIndexOf,\n      isCommon = true,\n      cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n      valuesLength = values.length;\n\n  if (cache) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n    values = cache;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index];\n\n    if (isCommon && value === value) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === value) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (indexOf(values, value, 0) < 0) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,qBAAqB,CAAC;EAC5CC,YAAY,GAAGD,OAAO,CAAC,sBAAsB,CAAC;EAC9CE,WAAW,GAAGF,OAAO,CAAC,qBAAqB,CAAC;;AAEhD;AACA,IAAIG,gBAAgB,GAAG,GAAG;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACrC,IAAIC,MAAM,GAAGF,KAAK,GAAGA,KAAK,CAACE,MAAM,GAAG,CAAC;IACjCC,MAAM,GAAG,EAAE;EAEf,IAAI,CAACD,MAAM,EAAE;IACX,OAAOC,MAAM;EACf;EACA,IAAIC,KAAK,GAAG,CAAC,CAAC;IACVC,OAAO,GAAGX,WAAW;IACrBY,QAAQ,GAAG,IAAI;IACfC,KAAK,GAAID,QAAQ,IAAIL,MAAM,CAACC,MAAM,IAAIJ,gBAAgB,GAAID,WAAW,CAACI,MAAM,CAAC,GAAG,IAAI;IACpFO,YAAY,GAAGP,MAAM,CAACC,MAAM;EAEhC,IAAIK,KAAK,EAAE;IACTF,OAAO,GAAGT,YAAY;IACtBU,QAAQ,GAAG,KAAK;IAChBL,MAAM,GAAGM,KAAK;EAChB;EACAE,KAAK,EACL,OAAO,EAAEL,KAAK,GAAGF,MAAM,EAAE;IACvB,IAAIQ,KAAK,GAAGV,KAAK,CAACI,KAAK,CAAC;IAExB,IAAIE,QAAQ,IAAII,KAAK,KAAKA,KAAK,EAAE;MAC/B,IAAIC,WAAW,GAAGH,YAAY;MAC9B,OAAOG,WAAW,EAAE,EAAE;QACpB,IAAIV,MAAM,CAACU,WAAW,CAAC,KAAKD,KAAK,EAAE;UACjC,SAASD,KAAK;QAChB;MACF;MACAN,MAAM,CAACS,IAAI,CAACF,KAAK,CAAC;IACpB,CAAC,MACI,IAAIL,OAAO,CAACJ,MAAM,EAAES,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE;MACtCP,MAAM,CAACS,IAAI,CAACF,KAAK,CAAC;IACpB;EACF;EACA,OAAOP,MAAM;AACf;AAEAU,MAAM,CAACC,OAAO,GAAGf,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}