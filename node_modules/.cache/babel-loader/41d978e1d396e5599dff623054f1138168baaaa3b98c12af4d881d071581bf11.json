{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Reset = void 0;\nconst brackets_model_1 = require(\"brackets-model\");\nconst updater_1 = require(\"./base/updater\");\nconst helpers = require(\"./helpers\");\nclass Reset extends updater_1.BaseUpdater {\n  /**\n   * Resets the results of a match.\n   *\n   * This will update related matches accordingly.\n   *\n   * @param matchId ID of the match.\n   */\n  async matchResults(matchId) {\n    const stored = await this.storage.select('match', matchId);\n    if (!stored) throw Error('Match not found.');\n    // The user can handle forfeits with matches which have child games in two possible ways:\n    //\n    // 1. Set forfeits for the parent match directly.\n    //    --> The child games will never be updated: not locked, not finished, without forfeit. They will just be ignored and never be played.\n    //    --> To reset the forfeits, the user has to reset the parent match, with `reset.matchResults()`.\n    //    --> `reset.matchResults()` will be usable **only** to reset the forfeit of the parent match. Otherwise it will throw the error below.\n    //\n    // 2. Set forfeits for each child game.\n    //    --> The parent match won't automatically have a forfeit, but will be updated with a computed score according to the forfeited match games.\n    //    --> To reset the forfeits, the user has to reset each child game on its own, with `reset.matchGameResults()`.\n    //    --> `reset.matchResults()` will throw the error below in all cases.\n    if (!helpers.isMatchForfeitCompleted(stored) && stored.child_count > 0) throw Error('The parent match is controlled by its child games and its result cannot be reset.');\n    const stage = await this.storage.select('stage', stored.stage_id);\n    if (!stage) throw Error('Stage not found.');\n    const group = await this.storage.select('group', stored.group_id);\n    if (!group) throw Error('Group not found.');\n    const {\n      roundNumber,\n      roundCount\n    } = await this.getRoundPositionalInfo(stored.round_id);\n    const matchLocation = helpers.getMatchLocation(stage.type, group.number);\n    const nextMatches = await this.getNextMatches(stored, matchLocation, stage, roundNumber, roundCount);\n    if (nextMatches.some(match => match && match.status >= brackets_model_1.Status.Running && !helpers.isMatchByeCompleted(match))) throw Error('The match is locked.');\n    helpers.resetMatchResults(stored);\n    await this.applyMatchUpdate(stored);\n    if (!helpers.isRoundRobin(stage)) await this.updateRelatedMatches(stored, true, true);\n  }\n  /**\n   * Resets the results of a match game.\n   *\n   * @param gameId ID of the match game.\n   */\n  async matchGameResults(gameId) {\n    const stored = await this.storage.select('match_game', gameId);\n    if (!stored) throw Error('Match game not found.');\n    const stage = await this.storage.select('stage', stored.stage_id);\n    if (!stage) throw Error('Stage not found.');\n    const inRoundRobin = helpers.isRoundRobin(stage);\n    helpers.resetMatchResults(stored);\n    if (!(await this.storage.update('match_game', stored.id, stored))) throw Error('Could not update the match game.');\n    await this.updateParentMatch(stored.parent_id, inRoundRobin);\n  }\n  /**\n   * Resets the seeding of a stage.\n   *\n   * @param stageId ID of the stage.\n   */\n  async seeding(stageId) {\n    await this.updateSeeding(stageId, {\n      seeding: null\n    }, false);\n  }\n}\nexports.Reset = Reset;","map":{"version":3,"names":["brackets_model_1","require","updater_1","helpers","Reset","BaseUpdater","matchResults","matchId","stored","storage","select","Error","isMatchForfeitCompleted","child_count","stage","stage_id","group","group_id","roundNumber","roundCount","getRoundPositionalInfo","round_id","matchLocation","getMatchLocation","type","number","nextMatches","getNextMatches","some","match","status","Status","Running","isMatchByeCompleted","resetMatchResults","applyMatchUpdate","isRoundRobin","updateRelatedMatches","matchGameResults","gameId","inRoundRobin","update","id","updateParentMatch","parent_id","seeding","stageId","updateSeeding","exports"],"sources":["../src/reset.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}