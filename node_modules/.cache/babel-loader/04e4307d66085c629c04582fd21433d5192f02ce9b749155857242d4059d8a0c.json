{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\CreateTournaments.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport '../App.css';\nimport { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from './helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTournaments = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    authState,\n    setAuthState\n  } = useContext(AuthContext);\n  const initialValues = {\n    tournament_name: \"\",\n    start_date: \"\",\n    end_date: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    tournament_name: Yup.string().required(\"You must create a Tournament Name!!\"),\n    start_date: Yup.date().nullable().required('Start Date is required'),\n    end_date: Yup.date().nullable().required('End Date is required')\n  });\n  const onSubmit = (data, {\n    setSubmitting\n  }) => {\n    console.log('Submitting data:', data);\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      // Handle the case where accessToken is not available\n      console.error('Access token not found. API request not made.');\n      return;\n    }\n    axios.post(\"http://localhost:3001/tournaments\", data, {\n      headers: {\n        accessToken: accessToken\n      }\n    }).then(response => {\n      console.log(\"Request successful:\", response.data);\n      // Navigate to '/CreateUsers' after successful submission\n      navigate('/Home');\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    }).finally(() => {\n      // Ensure to reset the form submission state\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tournament_name\",\n            children: \"Tournament Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"tournament_name\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"tournament_name\",\n            name: \"tournament_name\",\n            placeholder: \"(Ex. USA OPEN...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"start_date\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"start_date\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"start_date\",\n            name: \"start_date\",\n            placeholder: \"(Ex. MM,DD,YY)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formField\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"end_date\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"end_date\",\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"end_date\",\n            name: \"end_date\",\n            placeholder: \"(Ex. MM,DD,YY)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Tournament\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTournaments, \"HluMtueSfwuzu3OrH7Xk7dSEp3M=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateTournaments;\nexport default CreateTournaments;\nvar _c;\n$RefreshReg$(_c, \"CreateTournaments\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","axios","useContext","useNavigate","AuthContext","jsxDEV","_jsxDEV","CreateTournaments","_s","navigate","authState","setAuthState","initialValues","tournament_name","start_date","end_date","validationSchema","object","shape","string","required","date","nullable","onSubmit","data","setSubmitting","console","log","accessToken","localStorage","getItem","error","post","headers","then","response","catch","finally","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","component","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/CreateTournaments.js"],"sourcesContent":["\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\nimport {useContext} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {AuthContext} from './helpers/AuthContext';\r\n\r\nconst CreateTournaments = ( ) => {\r\n    const navigate = useNavigate();\r\n    const {authState, setAuthState} = useContext(AuthContext);\r\n\r\n  const initialValues = {\r\n    tournament_name: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n  };\r\n\r\n \r\n\r\n  const validationSchema = Yup.object().shape({\r\n    tournament_name: Yup.string().required(\"You must create a Tournament Name!!\"),\r\n    start_date: Yup.date().nullable().required('Start Date is required'),\r\n    end_date: Yup.date().nullable().required('End Date is required')\r\n  });\r\n\r\n  const onSubmit = (data, { setSubmitting }) => {\r\n    console.log('Submitting data:', data);\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n  \r\n    if (!accessToken) {\r\n      // Handle the case where accessToken is not available\r\n      console.error('Access token not found. API request not made.');\r\n      return;\r\n    }\r\n  \r\n  \r\n    axios.post(\"http://localhost:3001/tournaments\", data, {\r\n        headers: {\r\n            accessToken: accessToken,\r\n        }\r\n    })\r\n        .then((response) => {\r\n            console.log(\"Request successful:\", response.data);\r\n            // Navigate to '/CreateUsers' after successful submission\r\n            navigate('/Home');\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n        })\r\n        .finally(() => {\r\n            // Ensure to reset the form submission state\r\n            setSubmitting(false);\r\n        });\r\n  };\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"tournament_name\">Tournament Name:</label>\r\n            <ErrorMessage name=\"tournament_name\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"tournament_name\"\r\n              name=\"tournament_name\"\r\n              placeholder=\"(Ex. USA OPEN...)\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"start_date\">Start Date:</label>\r\n            <ErrorMessage name=\"start_date\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"start_date\"\r\n              name=\"start_date\"\r\n              placeholder=\"(Ex. MM,DD,YY)\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"formField\">\r\n            <label htmlFor=\"end_date\">End Date:</label>\r\n            <ErrorMessage name=\"end_date\" component=\"span\" />\r\n            <Field\r\n              type=\"text\"\r\n              id=\"end_date\"\r\n              name=\"end_date\"\r\n              placeholder=\"(Ex. MM,DD,YY)\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n          type=\"submit\"\r\n          >Create Tournament\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateTournaments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}