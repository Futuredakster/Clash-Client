{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Delete = void 0;\nclass Delete {\n  /**\n   * Creates an instance of Delete, which will handle cleanly deleting data in the storage.\n   *\n   * @param storage The implementation of Storage.\n   */\n  constructor(storage) {\n    this.storage = storage;\n  }\n  /**\n   * Deletes a stage, and all its components:\n   *\n   * - Groups\n   * - Rounds\n   * - Matches\n   * - Match games\n   *\n   * @param stageId ID of the stage.\n   */\n  async stage(stageId) {\n    // The order is important here, because the abstract storage can possibly have foreign key checks (e.g. SQL).\n    if (!(await this.storage.delete('match_game', {\n      stage_id: stageId\n    }))) throw Error('Could not delete match games.');\n    if (!(await this.storage.delete('match', {\n      stage_id: stageId\n    }))) throw Error('Could not delete matches.');\n    if (!(await this.storage.delete('round', {\n      stage_id: stageId\n    }))) throw Error('Could not delete rounds.');\n    if (!(await this.storage.delete('group', {\n      stage_id: stageId\n    }))) throw Error('Could not delete groups.');\n    if (!(await this.storage.delete('stage', {\n      id: stageId\n    }))) throw Error('Could not delete the stage.');\n  }\n  /**\n   * Deletes **the stages** of a tournament (and all their components, see {@link stage | delete.stage()}).\n   *\n   * You are responsible for deleting the tournament itself.\n   *\n   * @param tournamentId ID of the tournament.\n   */\n  async tournament(tournamentId) {\n    const stages = await this.storage.select('stage', {\n      tournament_id: tournamentId\n    });\n    if (!stages) throw Error('Error getting the stages.');\n    // Not doing this in a `Promise.all()` since this can be a heavy operation.\n    for (const stage of stages) await this.stage(stage.id);\n  }\n}\nexports.Delete = Delete;","map":{"version":3,"names":["Delete","constructor","storage","stage","stageId","delete","stage_id","Error","id","tournament","tournamentId","stages","select","tournament_id","exports"],"sources":["../src/delete.ts"],"sourcesContent":[null],"mappings":";;;;;;AAGA,MAAaA,MAAM;EAIf;;;;;EAKAC,YAAYC,OAAgB;IACxB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEA;;;;;;;;;;EAUO,MAAMC,KAAKA,CAACC,OAAW;IAC1B;IAEA,IAAI,EAAC,MAAM,IAAI,CAACF,OAAO,CAACG,MAAM,CAAC,YAAY,EAAE;MAAEC,QAAQ,EAAEF;IAAO,CAAE,CAAC,GAC/D,MAAMG,KAAK,CAAC,+BAA+B,CAAC;IAEhD,IAAI,EAAC,MAAM,IAAI,CAACL,OAAO,CAACG,MAAM,CAAC,OAAO,EAAE;MAAEC,QAAQ,EAAEF;IAAO,CAAE,CAAC,GAC1D,MAAMG,KAAK,CAAC,2BAA2B,CAAC;IAE5C,IAAI,EAAC,MAAM,IAAI,CAACL,OAAO,CAACG,MAAM,CAAC,OAAO,EAAE;MAAEC,QAAQ,EAAEF;IAAO,CAAE,CAAC,GAC1D,MAAMG,KAAK,CAAC,0BAA0B,CAAC;IAE3C,IAAI,EAAC,MAAM,IAAI,CAACL,OAAO,CAACG,MAAM,CAAC,OAAO,EAAE;MAAEC,QAAQ,EAAEF;IAAO,CAAE,CAAC,GAC1D,MAAMG,KAAK,CAAC,0BAA0B,CAAC;IAE3C,IAAI,EAAC,MAAM,IAAI,CAACL,OAAO,CAACG,MAAM,CAAC,OAAO,EAAE;MAAEG,EAAE,EAAEJ;IAAO,CAAE,CAAC,GACpD,MAAMG,KAAK,CAAC,6BAA6B,CAAC;EAClD;EAEA;;;;;;;EAOO,MAAME,UAAUA,CAACC,YAAgB;IACpC,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACT,OAAO,CAACU,MAAM,CAAC,OAAO,EAAE;MAAEC,aAAa,EAAEH;IAAY,CAAE,CAAC;IAClF,IAAI,CAACC,MAAM,EACP,MAAMJ,KAAK,CAAC,2BAA2B,CAAC;IAE5C;IACA,KAAK,MAAMJ,KAAK,IAAIQ,MAAM,EACtB,MAAM,IAAI,CAACR,KAAK,CAACA,KAAK,CAACK,EAAE,CAAC;EAClC;;AAzDJM,OAAA,CAAAd,MAAA,GAAAA,MAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}