{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Brackets\\\\BracketApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport map from 'lodash/map';\nimport uniq from 'lodash/uniq';\nimport './Brackets.css';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BracketApp = () => {\n  _s();\n  const [brackets, setBrackets] = useState([]);\n  const [bracketCount, setBracketCount] = useState(0);\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const division_id = queryParams.get('division_id') || '';\n\n  // Fetch brackets and generate brackets when the button is clicked\n  const generateBracket = async () => {\n    if (!division_id) {\n      console.error('No division_id provided.');\n      return;\n    }\n    try {\n      // Fetch brackets from the backend\n      const response = await axios.get('http://localhost:3001/brackets', {\n        params: {\n          division_id\n        }\n      });\n      let fetchedBrackets = response.data; // Store fetched brackets\n      console.log('Fetched brackets:', fetchedBrackets);\n\n      // Sort fetched brackets by bracket_id\n      fetchedBrackets = fetchedBrackets.sort((a, b) => a.bracket_id - b.bracket_id);\n      let bracketSize = fetchedBrackets.length; // Use fetched number of brackets\n      if (bracketSize === 0) {\n        console.error(\"No brackets found to display\");\n        return;\n      }\n      const newBrackets = [];\n      for (let i = 0; i < bracketSize; i++) {\n        var _fetchedBrackets$i, _fetchedBrackets$i2;\n        const user1 = ((_fetchedBrackets$i = fetchedBrackets[i]) === null || _fetchedBrackets$i === void 0 ? void 0 : _fetchedBrackets$i.user1) || \"Bye\"; // Handle empty user1\n        const user2 = ((_fetchedBrackets$i2 = fetchedBrackets[i]) === null || _fetchedBrackets$i2 === void 0 ? void 0 : _fetchedBrackets$i2.user2) || \"Bye\"; // Handle empty user2\n\n        newBrackets.push({\n          nextGame: i + 1 > bracketSize - 1 ? null : i + 1,\n          user1: user1,\n          user2: user2,\n          bracketNo: fetchedBrackets[i].bracket_id,\n          bye: !user1 || !user2\n        });\n      }\n      console.log(\"newBrackets\", newBrackets);\n      renderBrackets(newBrackets);\n    } catch (error) {\n      console.error('Error fetching brackets from backend:', error);\n    }\n  };\n  const renderBrackets = struct => {\n    // Instead of grouping by round (as your data doesn't seem to have rounds),\n    // display each bracket one after the other in a simple list.\n    const group = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `group${bracketCount}`,\n      id: `b${bracketCount}`,\n      children: map(struct, (gg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: gg.bye ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bracketbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info1\",\n            children: [\"Bracket \", gg.bracketNo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"teama\",\n            children: gg.user1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"teamb\",\n            children: gg.user2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n    setBrackets(prevBrackets => [...prevBrackets, group]);\n    setBracketCount(prevCount => prevCount + 1);\n  };\n  const clearBrackets = () => {\n    setBrackets([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add\",\n      onClick: generateBracket,\n      children: \"Show Brackets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"clear\",\n      onClick: clearBrackets,\n      children: \"Clear Brackets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brackets\",\n      id: \"brackets\",\n      children: brackets.map((bracketGroup, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: bracketGroup\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(BracketApp, \"6ls6LXTqzkgD9F1xa+70YOQOLv8=\", false, function () {\n  return [useLocation];\n});\n_c = BracketApp;\nexport default BracketApp;\nvar _c;\n$RefreshReg$(_c, \"BracketApp\");","map":{"version":3,"names":["React","useState","map","uniq","axios","useLocation","jsxDEV","_jsxDEV","BracketApp","_s","brackets","setBrackets","bracketCount","setBracketCount","location","queryParams","URLSearchParams","search","division_id","get","generateBracket","console","error","response","params","fetchedBrackets","data","log","sort","a","b","bracket_id","bracketSize","length","newBrackets","i","_fetchedBrackets$i","_fetchedBrackets$i2","user1","user2","push","nextGame","bracketNo","bye","renderBrackets","struct","group","className","id","children","gg","idx","fileName","_jsxFileName","lineNumber","columnNumber","prevBrackets","prevCount","clearBrackets","onClick","bracketGroup","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Brackets/BracketApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport map from 'lodash/map';\r\nimport uniq from 'lodash/uniq';\r\nimport './Brackets.css';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst BracketApp = () => {\r\n  const [brackets, setBrackets] = useState([]);\r\n  const [bracketCount, setBracketCount] = useState(0);\r\n  const location = useLocation();\r\n  const queryParams = new URLSearchParams(location.search);\r\n  const division_id = queryParams.get('division_id') || '';\r\n\r\n  // Fetch brackets and generate brackets when the button is clicked\r\n  const generateBracket = async () => {\r\n    if (!division_id) {\r\n      console.error('No division_id provided.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Fetch brackets from the backend\r\n      const response = await axios.get('http://localhost:3001/brackets', {\r\n        params: { division_id },\r\n      });\r\n      let fetchedBrackets = response.data;  // Store fetched brackets\r\n      console.log('Fetched brackets:', fetchedBrackets);\r\n\r\n      // Sort fetched brackets by bracket_id\r\n      fetchedBrackets = fetchedBrackets.sort((a, b) => a.bracket_id - b.bracket_id);\r\n\r\n      let bracketSize = fetchedBrackets.length;  // Use fetched number of brackets\r\n      if (bracketSize === 0) {\r\n        console.error(\"No brackets found to display\");\r\n        return;\r\n      }\r\n\r\n      const newBrackets = [];\r\n\r\n      for (let i = 0; i < bracketSize; i++) {\r\n        const user1 = fetchedBrackets[i]?.user1 || \"Bye\";  // Handle empty user1\r\n        const user2 = fetchedBrackets[i]?.user2 || \"Bye\";  // Handle empty user2\r\n\r\n        newBrackets.push({\r\n          nextGame: i + 1 > bracketSize - 1 ? null : i + 1,\r\n          user1: user1,\r\n          user2: user2,\r\n          bracketNo: fetchedBrackets[i].bracket_id,\r\n          bye: !user1 || !user2,\r\n        });\r\n      }\r\n\r\n      console.log(\"newBrackets\", newBrackets);\r\n      renderBrackets(newBrackets);\r\n    } catch (error) {\r\n      console.error('Error fetching brackets from backend:', error);\r\n    }\r\n  };\r\n\r\n  const renderBrackets = (struct) => {\r\n    // Instead of grouping by round (as your data doesn't seem to have rounds),\r\n    // display each bracket one after the other in a simple list.\r\n    const group = (\r\n      <div className={`group${bracketCount}`} id={`b${bracketCount}`}>\r\n        {map(struct, (gg, idx) => (\r\n          <div key={idx}>\r\n            {gg.bye ? (\r\n              <div></div>\r\n            ) : (\r\n              <div className=\"bracketbox\">\r\n                <span className=\"info1\">Bracket {gg.bracketNo}</span>\r\n                <span className=\"teama\">{gg.user1}</span>  {/* Display user1 */}\r\n                <span className=\"teamb\">{gg.user2}</span>  {/* Display user2 */}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n\r\n    setBrackets((prevBrackets) => [...prevBrackets, group]);\r\n    setBracketCount((prevCount) => prevCount + 1);\r\n  };\r\n\r\n  const clearBrackets = () => {\r\n    setBrackets([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button id=\"add\" onClick={generateBracket}>Show Brackets</button> {/* Fetches and generates brackets when clicked */}\r\n      <button id=\"clear\" onClick={clearBrackets}>Clear Brackets</button>\r\n      <div className=\"brackets\" id=\"brackets\">\r\n        {brackets.map((bracketGroup, idx) => (\r\n          <div key={idx}>{bracketGroup}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BracketApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}