{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\CreateAccount.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreatePost() {\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password_hash: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"You must input a username!\"),\r\n    email: Yup.string().required(),\r\n    password_hash: Yup.string().min(3).max(15).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios.post(\"http://localhost:3001/users\", data).then((response) => {\r\n      console.log(\"IT WORKED\");\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <label>username: </label>\r\n          <ErrorMessage name=\"username\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"username\"\r\n            placeholder=\"(Ex. username...)\"\r\n          />\r\n          <label>email: </label>\r\n          <ErrorMessage name=\"email\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"email\"\r\n            placeholder=\"(Ex. email...)\"\r\n          />\r\n          <label>password_hash: </label>\r\n          <ErrorMessage name=\"password_hash\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"password_hash\"\r\n            placeholder=\"(Ex. John123...)\"\r\n          />\r\n\r\n          <button type=\"submit\"> Create Post</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;*/\n\n// MultiStepForm.js\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Step1 from './Step1'; // Create Step1 component similarly for other steps\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateAccount = () => {\n  _s();\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: ''\n    // ... other fields\n  });\n  const validationSchema = Yup.object({\n    // Define validation schema using Yup\n    firstName: Yup.string().required('Required'),\n    lastName: Yup.string().required('Required'),\n    email: Yup.string().email('Invalid email').required('Required')\n    // ... other fields\n  });\n  const formik = useFormik({\n    initialValues: formData,\n    validationSchema,\n    onSubmit: async values => {\n      // Handle form submission\n      console.log(values);\n\n      // Assuming you have a backend endpoint for saving the data\n      try {\n        const response = await axios.post('your_backend_endpoint', values);\n        console.log('Data successfully sent to the backend:', response.data);\n      } catch (error) {\n        console.error('Error sending data to the backend:', error);\n      }\n    }\n  });\n  const nextStep = () => setStep(step + 1);\n  const prevStep = () => setStep(step - 1);\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Step1, {\n          formik: formik,\n          nextStep: nextStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Step2, {\n          formik: formik,\n          nextStep: nextStep,\n          prevStep: prevStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(Step3, {\n          formik: formik,\n          prevStep: prevStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderStep(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: formik.submitForm,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateAccount, \"tQRmFJHPhoa3RDriWCoodqm1od8=\", false, function () {\n  return [useFormik];\n});\n_c = CreateAccount;\nexport default CreateAccount;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["React","useState","useFormik","Yup","Step1","Step2","Step3","axios","jsxDEV","_jsxDEV","CreateAccount","_s","step","setStep","formData","setFormData","firstName","lastName","email","validationSchema","object","string","required","formik","initialValues","onSubmit","values","console","log","response","post","data","error","nextStep","prevStep","renderStep","fileName","_jsxFileName","lineNumber","columnNumber","children","htmlFor","type","id","name","onChange","handleChange","onBlur","handleBlur","value","touched","errors","onClick","submitForm","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/CreateAccount.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreatePost() {\r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password_hash: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"You must input a username!\"),\r\n    email: Yup.string().required(),\r\n    password_hash: Yup.string().min(3).max(15).required(),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    axios.post(\"http://localhost:3001/users\", data).then((response) => {\r\n      console.log(\"IT WORKED\");\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"createPostPage\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={onSubmit}\r\n        validationSchema={validationSchema}\r\n      >\r\n        <Form className=\"formContainer\">\r\n          <label>username: </label>\r\n          <ErrorMessage name=\"username\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"username\"\r\n            placeholder=\"(Ex. username...)\"\r\n          />\r\n          <label>email: </label>\r\n          <ErrorMessage name=\"email\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"email\"\r\n            placeholder=\"(Ex. email...)\"\r\n          />\r\n          <label>password_hash: </label>\r\n          <ErrorMessage name=\"password_hash\" component=\"span\" />\r\n          <Field\r\n            autocomplete=\"off\"\r\n            id=\"inputCreatePost\"\r\n            name=\"password_hash\"\r\n            placeholder=\"(Ex. John123...)\"\r\n          />\r\n\r\n          <button type=\"submit\"> Create Post</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;*/\r\n\r\n\r\n\r\n// MultiStepForm.js\r\nimport React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Step1 from './Step1'; // Create Step1 component similarly for other steps\r\nimport Step2 from './Step2';\r\nimport Step3 from './Step3';\r\nimport axios from 'axios';\r\n\r\nconst CreateAccount = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    // ... other fields\r\n  });\r\n\r\n  const validationSchema = Yup.object({\r\n    // Define validation schema using Yup\r\n    firstName: Yup.string().required('Required'),\r\n    lastName: Yup.string().required('Required'),\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n    // ... other fields\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: formData,\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      // Handle form submission\r\n      console.log(values);\r\n\r\n      // Assuming you have a backend endpoint for saving the data\r\n      try {\r\n        const response = await axios.post('your_backend_endpoint', values);\r\n        console.log('Data successfully sent to the backend:', response.data);\r\n      } catch (error) {\r\n        console.error('Error sending data to the backend:', error);\r\n      }\r\n    },\r\n  });\r\n\r\n  const nextStep = () => setStep(step + 1);\r\n  const prevStep = () => setStep(step - 1);\r\n\r\n  const renderStep = () => {\r\n    switch (step) {\r\n      case 1:\r\n        return <Step1 formik={formik} nextStep={nextStep} />;\r\n      case 2:\r\n        return <Step2 formik={formik} nextStep={nextStep} prevStep={prevStep} />;\r\n      case 3:\r\n        return <Step3 formik={formik} prevStep={prevStep} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {renderStep()}\r\n\r\n      {/* Common form fields */}\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.email}\r\n        />\r\n        {formik.touched.email && formik.errors.email && (\r\n          <div>{formik.errors.email}</div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Submit button */}\r\n      {step === 3 && (\r\n        <button type=\"submit\" onClick={formik.submitForm}>\r\n          Submit\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAccount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}