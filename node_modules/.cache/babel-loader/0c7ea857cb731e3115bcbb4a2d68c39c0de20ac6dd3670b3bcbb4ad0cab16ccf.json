{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Searchbar from '../Searchbar';\nimport TableContent from '../TableContent';\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home({\n  authState\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState('');\n  //const {authState, setAuthState} = useContext(AuthContext);\n  console.log(authState.accoint_id);\n  useEffect(() => {\n    // Check if accessToken exists in localStorage\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      // Handle the case where accessToken is not available\n      console.error('Access token not found. API request not made.');\n      return;\n    }\n\n    // Fetch data from the backend API\n    axios.get('http://localhost:3001/tournaments', {\n      headers: {\n        accessToken: accessToken\n      },\n      params: {\n        tournament_name: search\n      }\n    }).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        console.log(authState.id);\n        setData(response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContent, {\n      items: data,\n      accountId: authState.accoint_id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ro/LbLng+VWqivc8iADcUj4yn+U=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","Searchbar","TableContent","AuthContext","jsxDEV","_jsxDEV","Home","authState","_s","data","setData","search","setSearch","console","log","accoint_id","accessToken","localStorage","getItem","error","get","headers","params","tournament_name","then","response","alert","id","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","items","accountId","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport Searchbar from '../Searchbar';\r\nimport TableContent from '../TableContent';\r\nimport {AuthContext} from '../helpers/AuthContext';\r\n\r\n\r\n\r\nfunction Home({authState}) {\r\n  const [data, setData] = useState([]);\r\n  const [search,setSearch] = useState('')\r\n  //const {authState, setAuthState} = useContext(AuthContext);\r\n  console.log(authState.accoint_id);\r\n \r\n  useEffect(() => {\r\n    // Check if accessToken exists in localStorage\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n    if (!accessToken) {\r\n      // Handle the case where accessToken is not available\r\n      console.error('Access token not found. API request not made.');\r\n      return;\r\n    }\r\n  \r\n    // Fetch data from the backend API\r\n    axios.get('http://localhost:3001/tournaments', {\r\n      headers: {\r\n        accessToken: accessToken,\r\n      },\r\n      params: {\r\n        tournament_name: search,\r\n      },\r\n    })\r\n      .then(response => {\r\n        if (response.data.error) {\r\n          alert(response.data.error);\r\n        } else {\r\n          console.log(authState.id);\r\n          setData(response.data);\r\n        \r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching data:', error);\r\n      });\r\n  }, [search]);\r\n\r\n  \r\n\r\n\r\n  return (\r\n  \r\n    <div>\r\n      <Searchbar\r\n      search={search}\r\n      setSearch={setSearch}\r\n      />\r\n      <TableContent\r\n        items={data}\r\n        accountId={authState.accoint_id}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AAC7D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,SAAQC,WAAW,QAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,SAASC,IAAIA,CAAC;EAACC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,MAAM,EAACC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACvC;EACAgB,OAAO,CAACC,GAAG,CAACP,SAAS,CAACQ,UAAU,CAAC;EAEjCjB,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAI,CAACF,WAAW,EAAE;MAChB;MACAH,OAAO,CAACM,KAAK,CAAC,+CAA+C,CAAC;MAC9D;IACF;;IAEA;IACAnB,KAAK,CAACoB,GAAG,CAAC,mCAAmC,EAAE;MAC7CC,OAAO,EAAE;QACPL,WAAW,EAAEA;MACf,CAAC;MACDM,MAAM,EAAE;QACNC,eAAe,EAAEZ;MACnB;IACF,CAAC,CAAC,CACCa,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAAChB,IAAI,CAACU,KAAK,EAAE;QACvBO,KAAK,CAACD,QAAQ,CAAChB,IAAI,CAACU,KAAK,CAAC;MAC5B,CAAC,MAAM;QACLN,OAAO,CAACC,GAAG,CAACP,SAAS,CAACoB,EAAE,CAAC;QACzBjB,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MAExB;IACF,CAAC,CAAC,CACDmB,KAAK,CAACT,KAAK,IAAI;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAKZ,oBAEEN,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACJ,SAAS;MACVU,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF5B,OAAA,CAACH,YAAY;MACXgC,KAAK,EAAEzB,IAAK;MACZ0B,SAAS,EAAE5B,SAAS,CAACQ;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzB,EAAA,CAtDQF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAwDb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}