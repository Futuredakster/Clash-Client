{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const login = () => {\n    const data = {\n      username: username,\n      password: password\n    };\n    axios.post(\"http://localhost:3001/users/Login\", data).then(response => {\n      if (response.data.error) {\n        alert(response.data.error);\n      } else {\n        // Assuming response.data contains the access token\n        const accessToken = response.data;\n\n        // Decode the token to get user information\n        const decodedToken = jwt_decode(accessToken);\n\n        // Extract the username from the decoded token\n        const user = {\n          username: decodedToken.username\n        };\n\n        // Call the onLogin callback function passed from the App component\n        onLogin(user);\n\n        // Use the 'navigate' function to redirect after successful login\n        navigate(\"/\");\n\n        // Optionally, you can redirect the user or perform other actions\n        // after a successful login\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \" Login \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","navigate","login","data","post","then","response","error","alert","accessToken","decodedToken","jwt_decode","user","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\nfunction Login({ onLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const login = () => {\r\n    const data = { username: username, password: password };\r\n    axios.post(\"http://localhost:3001/users/Login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        // Assuming response.data contains the access token\r\n        const accessToken = response.data;\r\n\r\n        // Decode the token to get user information\r\n        const decodedToken = jwt_decode(accessToken);\r\n\r\n        // Extract the username from the decoded token\r\n        const user = { username: decodedToken.username };\r\n\r\n        // Call the onLogin callback function passed from the App component\r\n        onLogin(user);\r\n\r\n        // Use the 'navigate' function to redirect after successful login\r\n        navigate(\"/\");\r\n\r\n        // Optionally, you can redirect the user or perform other actions\r\n        // after a successful login\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(event) => {\r\n          setUsername(event.target.value);\r\n        }}\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        onChange={(event) => {\r\n          setPassword(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <button onClick={login}> Login </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,KAAKA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,KAAK,GAAGA,CAAA,KAAM;IAClB,MAAMC,IAAI,GAAG;MAAEN,QAAQ,EAAEA,QAAQ;MAAEE,QAAQ,EAAEA;IAAS,CAAC;IACvDV,KAAK,CAACe,IAAI,CAAC,mCAAmC,EAAED,IAAI,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MACvE,IAAIA,QAAQ,CAACH,IAAI,CAACI,KAAK,EAAE;QACvBC,KAAK,CAACF,QAAQ,CAACH,IAAI,CAACI,KAAK,CAAC;MAC5B,CAAC,MAAM;QACL;QACA,MAAME,WAAW,GAAGH,QAAQ,CAACH,IAAI;;QAEjC;QACA,MAAMO,YAAY,GAAGC,UAAU,CAACF,WAAW,CAAC;;QAE5C;QACA,MAAMG,IAAI,GAAG;UAAEf,QAAQ,EAAEa,YAAY,CAACb;QAAS,CAAC;;QAEhD;QACAF,OAAO,CAACiB,IAAI,CAAC;;QAEb;QACAX,QAAQ,CAAC,GAAG,CAAC;;QAEb;QACA;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MAAAqB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,KAAK,IAAK;QACnBvB,WAAW,CAACuB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFzB,OAAA;MAAAqB,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBzB,OAAA;MACE0B,IAAI,EAAC,UAAU;MACfC,QAAQ,EAAGC,KAAK,IAAK;QACnBrB,WAAW,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFzB,OAAA;MAAQ+B,OAAO,EAAEtB,KAAM;MAAAY,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACtB,EAAA,CArDQF,KAAK;EAAA,QAIKJ,WAAW;AAAA;AAAAmC,EAAA,GAJrB/B,KAAK;AAuDd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}