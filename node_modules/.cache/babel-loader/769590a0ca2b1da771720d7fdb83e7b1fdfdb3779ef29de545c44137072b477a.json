{"ast":null,"code":"var _jsxFileName = \"C:\\\\programming\\\\github\\\\Clash\\\\Frontend\\\\src\\\\Pages\\\\CreateTournaments.js\",\n  _s = $RefreshSig$();\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from 'yup';\nimport axios from \"axios\";\nimport '../App.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTournaments = () => {\n  _s();\n  const navigate = useNavigate();\n  const initialValues = {\n    tournament_name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    is_published: false\n  };\n  const validationSchema = Yup.object().shape({\n    tournament_name: Yup.string().required(\"You must create a Tournament Name!!\"),\n    start_date: Yup.date().nullable().required('Start Date is required'),\n    end_date: Yup.date().nullable().required('End Date is required'),\n    is_published: Yup.boolean().required('Publication status is required')\n  });\n  const onSubmit = (data, {\n    setSubmitting\n  }) => {\n    console.log('Submitting data:', data);\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (!accessToken) {\n      // Handle the case where accessToken is not available\n      console.error('Access token not found. API request not made.');\n      return;\n    }\n    axios.post(\"http://localhost:3001/tournaments\", data, {\n      headers: {\n        accessToken: accessToken\n      }\n    }).then(response => {\n      console.log(\"Request successful:\", response.data);\n      // Navigate to '/CreateUsers' after successful submission\n      navigate('/Home');\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    }).finally(() => {\n      // Ensure to reset the form submission state\n      setSubmitting(false);\n    });\n  };\n  const handlePublishButtonClick = formik => {\n    // Set is_published to true when the \"Publish\" button is clicked\n    formik.setFieldValue('is_published', true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      bg: \"secondary\",\n      text: \"white\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: \"Create Tournament\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: \"Please complete the form. It's simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          onSubmit: onSubmit,\n          validationSchema: validationSchema,\n          children: formik => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"tournament_name\",\n                className: \"form-label\",\n                children: \"Tournament Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"tournament_name\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                id: \"tournament_name\",\n                name: \"tournament_name\",\n                placeholder: \"(Ex. USA OPEN...)\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start_date\",\n                className: \"form-label\",\n                children: \"Start Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"start_date\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"date\",\n                id: \"start_date\",\n                name: \"start_date\",\n                placeholder: \"(Ex. MM,DD,YY)\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end_date\",\n                className: \"form-label\",\n                children: \"End Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"end_date\",\n                component: \"div\",\n                className: \"text-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"date\",\n                id: \"end_date\",\n                name: \"end_date\",\n                placeholder: \"(Ex. MM,DD,YY)\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Create Tournament\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTournaments, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateTournaments;\nexport default CreateTournaments;\nvar _c;\n$RefreshReg$(_c, \"CreateTournaments\");","map":{"version":3,"names":["Formik","Form","Field","ErrorMessage","Yup","axios","useNavigate","Container","Card","Button","jsxDEV","_jsxDEV","CreateTournaments","_s","navigate","initialValues","tournament_name","start_date","end_date","is_published","validationSchema","object","shape","string","required","date","nullable","boolean","onSubmit","data","setSubmitting","console","log","accessToken","localStorage","getItem","error","post","headers","then","response","catch","finally","handlePublishButtonClick","formik","setFieldValue","className","children","bg","text","Body","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","name","component","type","id","placeholder","variant","_c","$RefreshReg$"],"sources":["C:/programming/github/Clash/Frontend/src/Pages/CreateTournaments.js"],"sourcesContent":["\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Card, Button } from 'react-bootstrap';\r\n\r\nconst CreateTournaments = ( ) => {\r\n    const navigate = useNavigate();\r\n\r\n\r\n  const initialValues = {\r\n    tournament_name: \"\",\r\n    start_date: \"\",\r\n    end_date: \"\",\r\n    is_published: false,\r\n  };\r\n\r\n \r\n\r\n  const validationSchema = Yup.object().shape({\r\n    tournament_name: Yup.string().required(\"You must create a Tournament Name!!\"),\r\n    start_date: Yup.date().nullable().required('Start Date is required'),\r\n    end_date: Yup.date().nullable().required('End Date is required'),\r\n    is_published: Yup.boolean().required('Publication status is required'),\r\n  });\r\n\r\n  const onSubmit = (data, { setSubmitting }) => {\r\n    console.log('Submitting data:', data);\r\n    const accessToken = localStorage.getItem(\"accessToken\");\r\n  \r\n    if (!accessToken) {\r\n      // Handle the case where accessToken is not available\r\n      console.error('Access token not found. API request not made.');\r\n      return;\r\n    }\r\n  \r\n  \r\n    axios.post(\"http://localhost:3001/tournaments\", data, {\r\n        headers: {\r\n            accessToken: accessToken,\r\n        }\r\n    })\r\n        .then((response) => {\r\n            console.log(\"Request successful:\", response.data);\r\n            // Navigate to '/CreateUsers' after successful submission\r\n            navigate('/Home');\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error:\", error);\r\n        })\r\n        .finally(() => {\r\n            // Ensure to reset the form submission state\r\n            setSubmitting(false);\r\n        });\r\n  };\r\n\r\n  const handlePublishButtonClick = (formik) => {\r\n    // Set is_published to true when the \"Publish\" button is clicked\r\n    formik.setFieldValue('is_published', true);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Card bg=\"secondary\" text=\"white\">\r\n        <Card.Body>\r\n          <h4 className=\"card-title\">Create Tournament</h4>\r\n          <p className=\"card-text\">Please complete the form. It's simple</p>\r\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            {(formik) => (\r\n              <Form>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"tournament_name\" className=\"form-label\">\r\n                    Tournament Name:\r\n                  </label>\r\n                  <ErrorMessage name=\"tournament_name\" component=\"div\" className=\"text-danger\" />\r\n                  <Field\r\n                    type=\"text\"\r\n                    id=\"tournament_name\"\r\n                    name=\"tournament_name\"\r\n                    placeholder=\"(Ex. USA OPEN...)\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"start_date\" className=\"form-label\">\r\n                    Start Date:\r\n                  </label>\r\n                  <ErrorMessage name=\"start_date\" component=\"div\" className=\"text-danger\" />\r\n                  <Field type=\"date\" id=\"start_date\" name=\"start_date\" placeholder=\"(Ex. MM,DD,YY)\" className=\"form-control\" />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"end_date\" className=\"form-label\">\r\n                    End Date:\r\n                  </label>\r\n                  <ErrorMessage name=\"end_date\" component=\"div\" className=\"text-danger\" />\r\n                  <Field type=\"date\" id=\"end_date\" name=\"end_date\" placeholder=\"(Ex. MM,DD,YY)\" className=\"form-control\" />\r\n                </div>\r\n\r\n             {/*   <button\r\n                role=\"button\"\r\n                  onClick={() => handlePublishButtonClick(formik)}\r\n                  variant=\"primary\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  Publish and Submit\r\n                </button>\r\n            */}\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                  Create Tournament\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\nexport default CreateTournaments;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}